import { defineComponent as c, toRefs as i, ref as m, computed as p, openBlock as y, createBlock as w, resolveDynamicComponent as C, normalizeClass as b, withKeys as v, withCtx as k, renderSlot as g, createCommentVNode as V } from "vue";
import { onClickOutside as h } from "@vueuse/core";
import { SfDrawerPlacement as e } from "@storefront-ui/shared";
const K = /* @__PURE__ */ c({
  __name: "SfDrawer",
  props: {
    modelValue: {
      type: Boolean,
      default: !1
    },
    placement: {
      type: String,
      default: e.left
    },
    tag: {
      type: [String, Object],
      default: "aside"
    },
    disableClickAway: {
      type: Boolean,
      default: !1
    },
    disableEsc: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["update:modelValue"],
  setup(a, { emit: l }) {
    const s = a, { disableClickAway: n, disableEsc: r, placement: t } = i(s), o = m();
    h(o, () => {
      n.value || l("update:modelValue", !1);
    });
    const d = () => {
      r.value || l("update:modelValue", !1);
    }, f = p(() => ({
      "left-0": t.value !== e.right,
      "right-0": t.value !== e.left,
      "top-0": t.value !== e.bottom,
      "bottom-0": t.value !== e.top
    }));
    return (u, B) => a.modelValue ? (y(), w(C(a.tag), {
      key: 0,
      ref_key: "drawerRef",
      ref: o,
      class: b(["fixed", f.value]),
      "data-testid": "drawer",
      tabindex: "-1",
      onKeydown: v(d, ["esc"])
    }, {
      default: k(() => [
        g(u.$slots, "default")
      ]),
      _: 3
    }, 40, ["class", "onKeydown"])) : V("", !0);
  }
});
export {
  K as default
};
