import type { PropType } from 'vue';
declare const _sfc_main: import("vue").DefineComponent<{
    modelValue: {
        type: PropType<any[] | Set<any> | (boolean | "true" | "false") | undefined>;
        default: boolean;
    };
    invalid: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:modelValue"[], "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: PropType<any[] | Set<any> | (boolean | "true" | "false") | undefined>;
        default: boolean;
    };
    invalid: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    modelValue: any[] | Set<any> | (boolean | "true" | "false") | undefined;
    invalid: boolean;
}, {}>;
export default _sfc_main;
//# sourceMappingURL=SfCheckbox.vue.d.ts.map