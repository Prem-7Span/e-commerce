import { type PropType } from 'vue';
import { SfSelectSize } from '@storefront-ui/vue';
declare const _sfc_main: import("vue").DefineComponent<{
    size: {
        type: PropType<"sm" | "base" | "lg">;
        default: SfSelectSize;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    required: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    invalid: {
        type: BooleanConstructor;
        default: boolean;
    };
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    wrapperClassName: {
        type: StringConstructor;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:modelValue"[], "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: PropType<"sm" | "base" | "lg">;
        default: SfSelectSize;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    required: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    invalid: {
        type: BooleanConstructor;
        default: boolean;
    };
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    wrapperClassName: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    modelValue: string;
    size: "sm" | "base" | "lg";
    disabled: boolean;
    invalid: boolean;
    placeholder: string;
    required: boolean;
    wrapperClassName: string;
}, {}>;
export default _sfc_main;
//# sourceMappingURL=SfSelect.vue.d.ts.map